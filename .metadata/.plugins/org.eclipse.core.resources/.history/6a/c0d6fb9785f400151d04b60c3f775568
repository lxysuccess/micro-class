package yinzhi.micro_client.activity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.util.LogUtils;
import com.lidroid.xutils.view.annotation.ViewInject;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.inputmethod.EditorInfo;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import yinzhi.micro_client.R;
import yinzhi.micro_client.adapter.LxyCommonAdapter;
import yinzhi.micro_client.adapter.LxyViewHolder;

public class SearchActivity extends Activity {
	@ViewInject(R.id.search_input_et)
    private EditText searchInput;


    //存储搜索结果
    private List<Book> resultDatas = new ArrayList<>();

    //搜索结果列表
    @ViewInject(R.id.search_result)
    private ListView resultList;

    private LxyCommonAdapter<Book> adapter;

    //搜索方式(书名：1，作者：2，主题词：3，ISBN：4)
    private int SEARCH_TYPE = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_search);
        ViewUtils.inject(this);

        //初始化顶部工具栏
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        toolbar.setNavigationIcon(R.mipmap.left_back);

        //监听用户在搜索框中的输入情况
        searchInput.addTextChangedListener(textWatcher);

        searchInput.setOnEditorActionListener(new TextView.OnEditorActionListener() {
            @Override
            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
                if (actionId == EditorInfo.IME_ACTION_SEARCH || (event != null && event.getKeyCode() == KeyEvent.KEYCODE_ENTER)) {
                    //TODO 搜索
                    Toast.makeText(getApplicationContext(), "正在搜索", Toast.LENGTH_SHORT).show();
                    return true;
                }
                return false;
            }
        });

        adapter = new LxyCommonAdapter<Book>(this, resultDatas, R.layout.list_item_result) {
            @Override
            public void convert(LxyViewHolder holder, Book book) {
                holder.setText(R.id.result_book_title, book.getTitle());
            }
        };
        resultList.setAdapter(adapter);

    }

    private TextWatcher textWatcher = new TextWatcher() {
        @Override
        public void beforeTextChanged(CharSequence s, int start, int count, int after) {
            LogUtils.i("beforeTextChanged");

        }

        @Override
        public void onTextChanged(CharSequence s, int start, int before, int count) {
            LogUtils.i("onTextChanged");

        }

        @Override
        public void afterTextChanged(Editable s) {
            LogUtils.i("afterTextChanged");
            if (searchInput.getText().toString().equals(null) || searchInput.getText().toString().equals("")){
                resultList.setVisibility(View.GONE);
            }else{
                resultList.setVisibility(View.VISIBLE);
            }
            resultDatas.add(new Book("标题","","","",1L,1L,"",4.5,new Date(),"","",""));
            adapter.notifyDataSetChanged();
        }
    };

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();

        switch (id) {
            case android.R.id.home:
                Intent intent = new Intent(this, MainActivity.class);
                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP
                        | Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
                break;
            default:
                break;
        }
        return super.onOptionsItemSelected(item);
    }

}
