package yinzhi.micro_client.fragment;

import java.util.ArrayList;
import java.util.List;

import com.alibaba.fastjson.JSON;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.util.LogUtils;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.nostra13.universalimageloader.core.ImageLoader;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.support.v4.widget.SwipeRefreshLayout;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.Toast;
import yinzhi.micro_client.R;
import yinzhi.micro_client.activity.CaptureActivity;
import yinzhi.micro_client.activity.IntroductionActivity;
import yinzhi.micro_client.activity.LoginActivity;
import yinzhi.micro_client.activity.MainActivity;
import yinzhi.micro_client.activity.SearchActivity;
import yinzhi.micro_client.adapter.LxyCommonAdapter;
import yinzhi.micro_client.adapter.LxyViewHolder;
import yinzhi.micro_client.network.YZNetworkUtils;
import yinzhi.micro_client.network.YZResponseUtils;
import yinzhi.micro_client.network.constants.INetworkConstants;
import yinzhi.micro_client.network.vo.YZCourseVO;
import yinzhi.micro_client.network.vo.YZSlideVO;
import yinzhi.micro_client.utils.ImageUtil;
import yinzhi.micro_client.utils.SpMessageUtil;
import yinzhi.micro_client.view.ImageCycleView;

public class HomeFragment extends Fragment implements OnPageChangeListener, SwipeRefreshLayout.OnRefreshListener {

	@ViewInject(R.id.id_ad_view)
	private ImageCycleView mImageCycleView;
	@ViewInject(R.id.home_menu_imgbtn)
	private ImageButton mImageButton;
	@ViewInject(R.id.home_search_imgbtn)
	private ImageButton searchBtn;
	@ViewInject(R.id.scan_imgbtn)
	private ImageButton scan;
	@ViewInject(R.id.home_free_list)
	private GridView freeList;
	@ViewInject(R.id.home_charge_list)
	private GridView chargeList;
	@ViewInject(R.id.home_swipelayout)
	private SwipeRefreshLayout mSwipeLayout;

	private String tag = "FeaturedFragment";

	// 测试播放视频ID 保利威视
	private static String videoId = "9b55dbfec52e18a98869af498127d00e_9";

	/**
	 * 存储轮播图片url
	 */
	private ArrayList<String> mImageUrl = new ArrayList<String>();

	/**
	 * 存储实例list
	 */
	private List<YZSlideVO> slides = new ArrayList<YZSlideVO>();

	/**
	 * 免费好课推荐课程
	 */
	private List<YZCourseVO> freeDatas = new ArrayList<YZCourseVO>();

	/**
	 * 人气好课推荐课程
	 */
	private List<YZCourseVO> chargeDatas = new ArrayList<YZCourseVO>();

	private LxyCommonAdapter<YZCourseVO> freeAdapter;

	private LxyCommonAdapter<YZCourseVO> chargeAdapter;

	public static HomeFragment homeFragment;

	private MainActivity activity;

	private static Boolean isInit = true;

	/**
	 * 下拉刷新
	 * 
	 * @return
	 */
	private static final int REFRESH_COMPLETE = 0X110;

	private Handler rHandler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case REFRESH_COMPLETE:
				mSwipeLayout.setRefreshing(false);
				break;

			}
		};
	};

	public synchronized static HomeFragment getInstance() {
		if (homeFragment == null) {
			homeFragment = new HomeFragment();
		}
		return homeFragment;
	}

	@Override
	public void onAttach(Activity activity) {
		Log.i(tag, "onAttach");
		super.onAttach(activity);
		this.activity = (MainActivity) activity;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		Log.i(tag, "onCreate");
		super.onCreate(savedInstanceState);

	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		Log.i(tag, "onCreateView");
		View rootView = inflater.inflate(R.layout.fragment_home, null);
		ViewUtils.inject(this, rootView);

		// 向服务器请求获取推荐书籍宣传图
		setAdvImageUrl();

		initView();

		mSwipeLayout.setOnRefreshListener(this);
		onRefresh();

		mSwipeLayout.setColorScheme(android.R.color.holo_green_dark, android.R.color.holo_green_light,
				android.R.color.holo_orange_light, android.R.color.holo_red_light);

		return rootView;
	}

	private void initView() {
		freeAdapter = new LxyCommonAdapter<YZCourseVO>(getActivity(), freeDatas, R.layout.item_course_gv) {

			@Override
			public void convert(LxyViewHolder holder, YZCourseVO t) {
				holder.setImageViewUrl(R.id.home_gv_img, INetworkConstants.YZMC_SERVER + t.getCoursePicPath());
				holder.setText(R.id.home_gv_title, t.getTitle());
			}
		};
		freeList.setAdapter(freeAdapter);

		chargeAdapter = new LxyCommonAdapter<YZCourseVO>(getActivity(), chargeDatas, R.layout.item_course_gv) {

			@Override
			public void convert(LxyViewHolder holder, YZCourseVO t) {
				holder.setImageViewUrl(R.id.home_gv_img, INetworkConstants.YZMC_SERVER + t.getCoursePicPath());
				holder.setText(R.id.home_gv_title, t.getTitle());
			}
		};
		chargeList.setAdapter(chargeAdapter);
		isInit = false;

	}

	/**
	 * 获取数据
	 */
	private void updateDatas() {

		String token = SpMessageUtil.getLogonToken(getActivity().getApplicationContext());
		if (token == null) {
			Intent intent = new Intent(getActivity(), LoginActivity.class);
			startActivity(intent);
		}
		YZNetworkUtils.fetchFreeRecommendCourse(token, 0, 4, new RequestCallBack<String>() {

			@Override
			public void onFailure(HttpException arg0, String arg1) {
				// TODO Auto-generated method stub

			}

			@Override
			public void onSuccess(ResponseInfo<String> arg0) {
				String response = arg0.result;

				LogUtils.i("reponse=========" + response);
				if (JSON.parseObject(JSON.parseObject(response).get("data").toString()).get("status").equals("0")) {
					Toast.makeText(getActivity(), JSON.parseObject(response).get("msg").toString(), Toast.LENGTH_SHORT)
							.show();
					return;
				}

				freeDatas.clear();
				freeDatas.addAll(YZResponseUtils.parseArray(response, YZCourseVO.class));
				freeAdapter.notifyDataSetChanged();

				if (!isInit) {
					rHandler.sendEmptyMessage(REFRESH_COMPLETE);
				}
			}
		});

		YZNetworkUtils.fetchChargeRecommendCourse(token, 0, 4, new RequestCallBack<String>() {

			@Override
			public void onFailure(HttpException arg0, String arg1) {
				// TODO Auto-generated method stub

			}

			@Override
			public void onSuccess(ResponseInfo<String> arg0) {
				String response = arg0.result;

				LogUtils.i("reponse=========" + response);
				if (JSON.parseObject(JSON.parseObject(response).get("data").toString()).get("status").equals("0")) {
					Toast.makeText(getActivity(), JSON.parseObject(response).get("msg").toString(), Toast.LENGTH_SHORT)
							.show();
					return;
				}

				freeDatas.clear();
				freeDatas.addAll(YZResponseUtils.parseArray(response, YZCourseVO.class));
				freeAdapter.notifyDataSetChanged();

				if (!isInit) {
					rHandler.sendEmptyMessage(REFRESH_COMPLETE);
				}

			}
		});

	}

	/**
	 * 扫描二维码
	 * 
	 * @param v
	 */
	@OnClick(R.id.scan_imgbtn)
	public void scanClick(View v) {
		startActivity(new Intent(getActivity(), CaptureActivity.class));
		getActivity().overridePendingTransition(R.anim.activity_anim_left_in, 0);
	}

	/**
	 * 调出侧滑菜单
	 * 
	 * @param v
	 */
	@OnClick(R.id.home_menu_imgbtn)
	public void menuClick(View v) {
		activity.toggle();
	}

	/**
	 * 搜索按钮
	 */
	@OnClick(R.id.home_search_imgbtn)
	public void searchClick() {
		Intent intent = new Intent(getActivity(), SearchActivity.class);
		startActivity(intent);
		getActivity().overridePendingTransition(R.anim.activity_anim_left_in, 0);
	}

	/**
	 * 获取轮播图片数据
	 */
	private void setAdvImageUrl() {
		// TODO 轮播图片
		mImageUrl = new ArrayList<String>();
		YZNetworkUtils.fetchSlideList(null, "mockdeviceId", new RequestCallBack<String>() {

			@Override
			public void onSuccess(ResponseInfo<String> arg0) {
				String response = arg0.result;
				LogUtils.i("slide fetch" + response);
				try {
					slides = YZResponseUtils.parseArray(response, YZSlideVO.class);
					for (int i = 0; i < slides.size(); i++) {
						mImageUrl.add(INetworkConstants.YZMC_SERVER + slides.get(i).getSlidePicPath());
					}

					mImageCycleView.setImageResources(mImageUrl, mImageCycleViewListener);
				} catch (Exception e) {
					Toast.makeText(getActivity(), "数据解析失败", Toast.LENGTH_SHORT).show();
					e.printStackTrace();
				}

			}

			@Override
			public void onFailure(HttpException arg0, String arg1) {
				// TODO 错误处理

			}
		});

	}

	private ImageCycleView.ImageCycleViewListener mImageCycleViewListener = new ImageCycleView.ImageCycleViewListener() {
		@Override
		public void displayImage(String imageURL, ImageView imageView) {
			LogUtils.i("displayImage---------------------------------");

			ImageLoader.getInstance().displayImage(imageURL, imageView, ImageUtil.getDisplayOption(0));

		}

		@Override
		public void onImageClick(int position, View imageView) {
			// TODO 点击图片后处理事件
			Intent intent = new Intent();
			intent.putExtra("courseId", slides.get(position).getCourseId());
			intent.setClass(getActivity(), IntroductionActivity.class);
			startActivity(intent);
			// TODO 动画有问题？
			getActivity().overridePendingTransition(R.anim.activity_anim_left_in, R.anim.activity_anim_left_out);
		}
	};

	@Override
	public void onResume() {
		super.onResume();
		mImageCycleView.startImageCycle();
	}

	@Override
	public void onPause() {
		super.onPause();
		mImageCycleView.pauseImageCycle();
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		mImageCycleView.pauseImageCycle();
	}

	@Override
	public void onStart() {
		Log.i(tag, "onStart");
		super.onStart();
	}

	@Override
	public void onStop() {
		Log.i(tag, "onStop");
		super.onStop();
	}

	@Override
	public void onDestroyView() {
		Log.i(tag, "onDestroyView");
		super.onDestroyView();
	}

	@Override
	public void onDetach() {
		Log.i(tag, "onDetach");
		super.onDetach();
	}

	@Override
	public void onPageScrollStateChanged(int arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onPageScrolled(int arg0, float arg1, int arg2) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onPageSelected(int arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onRefresh() {
		LogUtils.i("正在刷新...");
		updateDatas();

	}

}
